name: Daily AI Score (Polygon)

on:
  workflow_dispatch: {}
  schedule:
    # run on market days ~15:20 UTC (after premarket); tweak as you like
    - cron: "20 15 * * 1-5"

concurrency:
  group: daily-ai-score
  cancel-in-progress: false

jobs:
  score:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TZ: UTC
      # OPTIONAL: put a default comma-separated list here or use GitHub "Repository variables" as CANDIDATE_TICKERS
      CANDIDATE_TICKERS: ${{ vars.CANDIDATE_TICKERS }} # e.g. "AAPL,TSLA,AMD,NVDA"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify prerequisites
        run: |
          if [ ! -f "models/ai_score.joblib" ]; then
            echo "Model (models/ai_score.joblib) not found. Run the training workflow first."; exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -U pandas numpy requests pyarrow joblib scikit-learn python-dateutil tenacity

      # If you already have a candidate CSV, skip building.
      # Otherwise: if today_tickers.txt is missing but CANDIDATE_TICKERS is set, write it.
      - name: Ensure tickers list exists if we need to build
        run: |
          if [ ! -f "public/today_candidates.csv" ] && [ ! -f "latest_screener.csv" ] && [ ! -f "public/latest_screener.csv" ] && [ ! -f "data/latest_screener.csv" ] && [ ! -f "public/today_tickers.txt" ]; then
            if [ -n "${CANDIDATE_TICKERS}" ]; then
              mkdir -p public
              # normalize commas/spaces into newlines
              echo "${CANDIDATE_TICKERS}" | tr ',' '\n' | sed 's/^[ \t]*//;s/[ \t]*$//' | grep -E '^[A-Z]+' > public/today_tickers.txt
              echo "Wrote public/today_tickers.txt from CANDIDATE_TICKERS:"
              cat public/today_tickers.txt
            else
              echo "No candidate CSV and no tickers list provided."
              echo "Provide one of: public/today_candidates.csv OR set repo var CANDIDATE_TICKERS OR commit public/today_tickers.txt"
              exit 1
            fi
          fi

      - name: Run daily scorer
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          python scripts/daily_ai_score.py

      - name: Commit & push today_scores.json
        run: |
          if [ -f "public/today_scores.json" ]; then
            git config user.email "bot@github"
            git config user.name  "actions-bot"
            git add public/today_scores.json
            git commit -m "Update today_scores.json" || true
            git push || true
            echo "Committed public/today_scores.json"
          else
            echo "today_scores.json not produced."
            exit 1
          fi
