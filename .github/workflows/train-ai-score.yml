name: Train AI Score (Polygon)

on:
  workflow_dispatch:
    inputs:
      YEARS:
        description: "Years back (ignored if you provide explicit dates)"
        default: "5"
        required: false
      TRAIN_START:
        description: "Start date (UTC) YYYY-MM-DD (optional)"
        required: false
      TRAIN_END:
        description: "End date (UTC) YYYY-MM-DD (optional)"
        required: false

permissions:
  contents: write

jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compute date window
        id: window
        shell: bash
        run: |
          # If explicit dates provided, use them; else compute "last N years"
          if [[ -n "${{ github.event.inputs.TRAIN_START }}" ]]; then
            START="${{ github.event.inputs.TRAIN_START }}"
            END="${{ github.event.inputs.TRAIN_END }}"
          else
            YRS="${{ github.event.inputs.YEARS }}"
            [[ -z "$YRS" ]] && YRS=5
            START=$(date -u -d "-${YRS} years" +%Y-%m-%d)
            END=$(date -u +%Y-%m-%d)
          fi
          echo "start=$START" >> "$GITHUB_OUTPUT"
          echo "end=$END" >> "$GITHUB_OUTPUT"
          echo "Training from $START to $END"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install requests pandas scikit-learn

      - name: Build training CSV
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
          TRAIN_START: ${{ steps.window.outputs.start }}
          TRAIN_END:   ${{ steps.window.outputs.end }}
        run: |
          python scripts/make_training_from_polygon.py

      - name: Train model
        run: |
          python scripts/train_ai_score.py

      - name: Move model to public/
        run: |
          mkdir -p public
          mv model_logreg_v1.json public/model_logreg_v1.json

      - name: Commit model to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/model_logreg_v1.json
          git commit -m "chore: update AI model (${{ steps.window.outputs.start }} â†’ ${{ steps.window.outputs.end }})" || echo "No changes to commit"
          git push

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ai-score-artifacts
          path: |
            training_polygon_v1.csv
            public/model_logreg_v1.json
